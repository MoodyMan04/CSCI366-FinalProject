UML:
- Database Manager
	o Attributes
		(DONE)  Connection: Connection
	o Methods
		(DONE)  + GetConnection(): Connection
- Book
	o Attributes
		(DONE)  Book_id: int
		(DONE)  Title: String
		(DONE)  Publisher: String
		(DONE)  Language: String
		(DONE)  Date_Published: DateTime
	o Methods
		(DONE)  + GetBookAll(): List<Book>
		(DONE)  + GetBookByTitle(String title): List<Book>
		(DONE)  + GetBookByLanguage(String lang): List<Book>
		(DONE)  + GetBookByID(int id): Book
		(DONE)  + GetBookCountAll(): int
		(DONE)  + GetCheckedOutALl(): List<(int, int, bool, DateTime)>
			• Check isAdmin of current logged in user
		 + GetCurrentlyCheckedOut(): List<(int, int, bool, DateTime)>
			• Check isAdmin of current logged in user
		(DONE)  + GetAuthoredByAll(): List<(int, int)>
			• Check isAdmin of current logged in user
		(DONE)  + GetAssociatedWithAll(): List<(int, int, bool)>
			• Check isAdmin of current logged in user
		(DONE - UNTESTED)  + AddClassRequirement(int bookID, int classID): void
			• Check isAdmin of current logged in user
		 + AddAuthorToBook(int bookID, int authorID): void
			• Check isAdmin of current logged in user
		 + AddBook(String title, String publisher, String language, DateTime date_published): void
			• Check isAdmin of current logged in user
		 + DeleteBook(int id): void
			• Check isAdmin of current logged in user
		 + UpdateBook(int id, Book book): void
			• Check isAdmin of current logged in user
		(DONE - DOES NOT USE DB)  + SetReturnDate(DateTime date): void
			• Check isAdmin of current logged in user
- Class
	o Attributes
		(DONE)  Class_id: int
		(DONE)  Class_name: String
		(DONE)  Class_description: String
	o Methods
		(DONE)  + GetClassAll(): List<Class>
		 + AddClass(String class_name, String class_desc): void
			• Check isAdmin of current logged in user
		 + UpdateClass(int id, Class class): void
			• Check isAdmin of current logged in user		
		 + DeleteClass(int id): void
			• Check isAdmin of current logged in user
- Author
	o Attributes
		(DONE)  Author_id: int
		(DONE)  Firstname: String
		(DONE)  Lastname: String
	o Methods
		(DONE)  + GetAuthorAll(): List<Author>
		 + AddAuthor(String firstname, String lastname): void
			• Check isAdmin of current logged in user
		 + UpdateAuthor(int id, Author author): void
			• Check isAdmin of current logged in user
		 + DeleteAuthor(int id): void
			• Check isAdmin of current logged in user
- User
	o Attributes
		(DONE)  User_id: int
		(DONE)  Username: String
		(DONE)  Password: String
		(DONE)  Firstname: String
		(DONE)  Lastname: String
		(DONE)  Email: String
		(DONE)  Is_admin: boolean
	o Methods
		(DONE)  GetUserAll(): List<User>
			• Check isAdmin of current logged in user
		 AddUser(String username, String password, String firstname, String lastname, String email Boolean is_admin): void
			• Check isAdmin of current logged in user
		 UpdateCurrentUserInfo(int id, String username, String password, String firstname, String lastname, String email): void
		 UpdateUserInfo(int id, User user): void
			• Check isAdmin of current logged in user
		 DeleteUser(int id): void
			• Check isAdmin of current logged in user
		 CheckOutBook(int bookID): void
		 ReturnBook(int bookID): void

NOTE: Although the methods will be divided into their respective classes, the methods will be accessed by either the User page of Admin page by calling the appropriate classes method.
